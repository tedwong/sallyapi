openapi: 3.0.0
tags:
  - name: User
    description: 'Get User profile, login'
  - name: Sop
    description: The main bot engine logic
info:
  title: doc2
  version: '1.0'
  contact:
    name: Hugo Cheung
    email: hugocheung@Instajs.com
  description: Api documentation mainly for mobile client
servers:
  - url: 'http://sallyapi.ijs.network:8080/api'
paths:
  /user/login:
    post:
      summary: ''
      operationId: post-user-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
                    description: 'login token for subsequent api calls, being inserted in the request header'
              examples:
                example-1:
                  value:
                    success: true
                    token: 2c3f70d0-4c42-4346-90a8-7d5849a2a34a
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic_error_response'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_name:
                  type: string
                password:
                  type: string
                device_id:
                  type: string
            examples:
              example-1:
                value:
                  user_name: invalid user name
                  password: invalid password
                  device_id: '123123'
      description: User login (mobile/ web)
      tags:
        - User
      parameters:
        - schema:
            type: string
          in: header
          name: token
          description: login token
          required: true
  /user/profile:
    get:
      summary: Your GET endpoint
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      staff_id:
                        type: string
                      full_name:
                        type: string
                      email:
                        type: string
                      tel:
                        type: string
                      gender:
                        type: string
                      direct_line:
                        type: string
                      avatar_url:
                        type: string
              examples:
                example-1:
                  value:
                    success: true
                    data:
                      staff_id: '123456'
                      full_name: null
                      email: hugocheung@instajs.com
                      tel: '66667777'
                      gender: M
                      direct_line: '22223334'
                      avatar_url: null
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic_error_response'
      operationId: get-user-profile
      requestBody:
        content:
          application/json:
            schema: {}
        description: ''
      parameters:
        - schema:
            type: string
          in: header
          name: token
          description: login token
          required: true
      description: "Get user's profile info"
    patch:
      summary: ''
      operationId: patch-user-profile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      description: "Edit user's profile"
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                staff_id:
                  type: string
                gender:
                  type: string
                email:
                  type: string
                tel:
                  type: string
                direct_line:
                  type: string
                department:
                  type: string
                avatar_url:
                  type: string
            examples:
              example-1:
                value:
                  staff_id: '123456'
                  gender: M
                  email: hugocheung@instajs.com
                  tel: '66667777'
                  direct_line: '22223334'
                  department: Department 1
  /sop/current:
    get:
      summary: Your GET endpoint
      tags:
        - Sop
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sop_response'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic_error_response'
      operationId: get-sop-current
      parameters:
        - schema:
            type: string
          in: header
          name: token
          description: login token
          required: true
      description: 'Being called whenever user launch the app (with or without login session), in order to get the current sop type and the current step'
  '/sop/{sop_type}/proceed':
    parameters:
      - schema:
          type: string
        name: sop_type
        in: path
        required: true
    post:
      summary: ''
      operationId: post-sop-sop_type-proceed
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sop_response'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic_error_response'
      description: "Proceed the sop according to user's response, mainly from clicking buttons / replying text(numbers) / sending attachments / picking date /"
      tags:
        - Sop
      parameters:
        - schema:
            type: string
          in: header
          name: token
          required: true
          description: login token
  '/sop/{sop_type}/current':
    parameters:
      - schema:
          type: string
        name: sop_type
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - Sop
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sop_response'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic_error_response'
      operationId: get-sop-sop_type-current
      description: Triggered to call this api when the 3 sop buttons are pressed / the greeting message are pressed
      parameters:
        - schema:
            type: string
          in: header
          name: token
          required: true
          description: login token
  /user/chatHistory:
    get:
      summary: Your GET endpoint
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      total_length:
                        type: number
                      page_size:
                        type: number
                      page:
                        type: number
                      history:
                        type: array
                        items:
                          type: object
                          properties:
                            content:
                              type: string
                            chat_type:
                              type: string
                            create_date:
                              type: string
                            create_by:
                              type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic_error_response'
      operationId: get-user-chatHistory
      parameters:
        - schema:
            type: string
          in: header
          name: token
          description: login token
        - schema:
            type: string
          in: query
          name: page_size
          description: 'Number of records returning, default 100'
        - schema:
            type: string
          in: query
          name: page
          description: page offset
      description: "Retrieving user's chat history. Should be called every time user lauching the app."
components:
  schemas:
    sop_response:
      title: sop_response
      type: object
      properties:
        success:
          type: string
        data:
          type: object
          properties:
            message:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  content:
                    type: string
            action:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  property_id:
                    type: string
                  type:
                    type: string
                  image:
                    type: string
                  title:
                    type: string
                  desc:
                    type: string
                  button:
                    type: string
                  url:
                    type: string
                  next:
                    type: string
                required:
                  - id
                  - property_id
                  - type
                  - next
      x-examples:
        example-1:
          success: true
          data:
            sop_type: petty_cash
            end: true
            message:
              - type: text
                content: 閣下的本月的Petty Cash Report已填報，請按以下連結查看
            action:
              - id: view_petty_cash_report
                property_id: view_petty_cash_report
                type: cart
                image: 'https://.'
                title: 閣下的本月的Petty Cash Report已填報，請按以下連結查看
                desc: ''
                button: View
                url: 'https://docs.google.com/spreadsheets/d/1X1GZ0rsg1qGRhTEQDcaI5R1VwAhIMiMjfp9drMr72sY/edit'
                next: 'null'
    basic_error_response:
      title: basic_error_response
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
